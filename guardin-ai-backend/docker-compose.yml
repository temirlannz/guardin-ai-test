services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: guardin-ai-prod
    ports:
      - "${APP_PORT}:${APP_PORT}"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - backend-net
#    volumes:
#      - ./:/app
#      - /app/node_modules

  postgres:
    image: postgres:15-alpine
    container_name: guardin-ai-db
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: guardin-ai-redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "${REDIS_PORT}:6379"
    restart: unless-stopped
    networks:
      - backend-net

volumes:
  postgres-data:

networks:
  backend-net:
